b1_se_m <- s_yx / sqrt(p_ss); b1_se_m
s_yx <- sqrt( sum(((d$SATM-(b0_m + b1_m*d$pay))^2)) / (n-2) ); s_yx
b1_se_m <- s_yx / sqrt(p_ss); b1_se_m
t_m <- b1_m / b1_se_m; t_m
p_m <- 2*pt(t_m,n-2,lower.tail=TRUE); p_m
lm.m <- lm(SATM~pay, data=d)
summary(lm.m)
s_yx <- sqrt( sum(((d$SATM-(b0_m + b1_m*d$pay))^2)) / (n-2) ); s_yx
b1_m
# ch 20, in class assignment
library(car)
d <- States
n <- dim(d)[1]
# 1)
# Plot it
plot(d$SATV, d$pay, xlab='SATV', ylab='pay')
plot(d$SATM, d$pay, xlab='SATM', ylab='pay')
# 2)
# acheived power of .77
# 3)
lm.v <- lm(SATV~pay, data=d)
summary(lm.v)
lm.m <- lm(SATM~pay, data=d)
summary(lm.m)
# slope:
b1_v <- cor(d$SATV,d$pay)*(sd(d$SATV)/sd(d$pay)); b1_v
b1_m <- cor(d$SATM,d$pay)*(sd(d$SATM)/sd(d$pay)); b1_m
# intercept:
b0_v <- mean(d$SATV) - b1_v*mean(d$pay); b0_v
b0_m <- mean(d$SATM) - b1_m*mean(d$pay); b0_m
# t.test !
p_ss <- sum((d$pay - mean(d$pay))^2); p_ss
b1_se_v <- cov(d$SATV,d$pay) / sqrt(p_ss); b1_se_v
t_v <- b1_v / b1_se_v; t_v
s_yx <- sqrt( sum(((d$SATM-(b0_m + b1_m*d$pay))^2)) / (n-2) ); s_yx
b1_se_m <- s_yx / sqrt(p_ss); b1_se_m
t_m <- b1_m / b1_se_m; t_m
p_m <- 2*pt(t_m,n-2,lower.tail=TRUE); p_m
# standard error of the estimate (standard deviation of residuals)
s_yx
# multiple correlation
cor(d$SATM,(b0_m + b1_m*d$pay))^2
# indicates how well the data fit?
# f-test
r_ss <- sum((((b0_m + b1_m*d$pay) - mean(d$SATM))^2)); r_ss
resi_ss <- sum(((d$SATM-(b0_m + b1_m*d$pay))^2)); resi_ss
r_ms <- r_ss / 1; r_ms
resi_ms <- resi_ss / (n-2); resi_ms
f_val <- r_ms / resi_ms; f_val
t_m^2
p_val <- pf(f_val,1,n-2,lower.tail=FALSE); p_val
# leverage
ca_pay <- d[rownames(d)=='CA','pay']
ca_h <- (1/n) + ((ca_pay - mean(d$pay))^2)/p_ss; ca_h
se_ca<-s_yx*sqrt(ca_h); se_ca
t_crit<-qt(.025,n-2,lower.tail = FALSE);
(b0_m + b1_m*ca_pay)-t_crit*se_ca
(b0_m + b1_m*ca_pay)+t_crit*se_ca
# CI for new values at California pay levels?
se_ca_pred<-s_yx*sqrt(1+ca_h); se_ca
(b0_m + b1_m*ca_pay)-t_crit*se_ca_pred
(b0_m + b1_m*ca_pay)+t_crit*se_ca_pred
# 4) Check assumptions
# leverage: potential to incluence
# residauls
plot(lm.m)
# 5) outliers?
# 6)
ca_h <- (1/n) + ((ca_pay - mean(d$pay))^2)/p_ss; ca_h
a <- c(.05,.05)
inp <- c(.35,.35)
w1 <- c(.05,.05)
w2 <- c(.35,.35)
w3 <- c(.35,.65)
inp %*% w1
inp %*% w2
inp %*% w3
norm_vec <- function(x) sqrt(sum(x^2))
a = .5
w1 + a*inp
(w1 + a*inp) / norm_vec(w1 + a*inp)
(w2 + a*inp) / norm_vec(w2 + a*inp)
(w3 + a*inp) / norm_vec(w3 + a*inp)
(w1 + a*inp) / norm_vec(w1 + a*inp)
(w2 + a*inp) / norm_vec(w2 + a*inp)
(w3 + a*inp) / norm_vec(w3 + a*inp)
w1_t2 <- (w1 + a*inp) / norm_vec(w1 + a*inp); w1_t2
w2_t2 <- (w2 + a*inp) / norm_vec(w2 + a*inp); w2_t2
w3_t2 <- (w3 + a*inp) / norm_vec(w3 + a*inp); w3_t2
inp %*% w1_t2
inp %*% w2_t2
inp %*% w3_t2
inp <- c(.35,.35)
w1 <- c(.05,.05)
w2 <- c(.35,.35)
w3 <- c(.35,.65)
inp %*% w1
inp %*% w2
inp %*% w3
w1_t2 <- (w1 + a*inp) / norm_vec(w1 + a*inp); w1_t2
w2_t2 <- (w2 + a*inp) / norm_vec(w2 + a*inp); w2_t2
w3_t2 <- (w3 + a*inp) / norm_vec(w3 + a*inp); w3_t2
inp %*% w1_t2
inp %*% w2_t2
inp %*% w3_t2
w1_norm <- norm_vec(w1); w1_norm
w2_norm <- norm_vec(w2); w2_norm
w3_norm <- norm_vec(w3); w3_norm
w1_norm <- w1/norm_vec(w1); w1_norm
w2_norm <- w2/norm_vec(w2); w2_norm
w3_norm <- w3/norm_vec(w3); w3_norm
inp %*% w1_norm
inp %*% w2_norm
inp %*% w3_norm
inp <- c(.35,.35)
w1 <- c(.05,.05)
w2 <- c(.35,.35)
w3 <- c(.35,.65)
w1_norm <- w1/norm_vec(w1); w1_norm
w2_norm <- w2/norm_vec(w2); w2_norm
w3_norm <- w3/norm_vec(w3); w3_norm
w1
w2
w3
w4 <- c(.65,.65)
w4_norm <- w4/norm_vec(w4); w4_norm
source('~/.active-rstudio-document')
w4_norm
norm_vec(w4_norm)
inp %*% inp
w1_norm %*% w1_norm
w1 * (w1_norm %*% w1_norm)
inp_norm < - inp/norm_wec(inp); inp_norm
inp_norm < - inp/norm_vec(inp); inp_norm
inp_norm < - inp/norm_vec(inp); inp_norm
inp_norm <- inp/norm_vec(inp); inp_norm
inp2 <- c(.2,.8)
inp2_norm <- inp2/norm_vec(inp2); inp2_norm
(inp_norm %*% w1_norm)
norm_vec(w1) * (inp_norm %*% w1_norm)
norm_vec(w1)
norm_vec(w2) * (inp_norm %*% w2_norm)
w3_norm * (inp_norm %*% w3_norm)
w1_norm * (inp_norm %*% w1_norm)
norm_vec(w3) * (inp_norm %*% w3_norm)
norm_vec(w1) * (inp_norm %*% w1_norm)
norm_vec(w2) * (inp_norm %*% w2_norm)
norm_vec(w3) * (inp_norm %*% w3_norm)
inp %*% w1_norm
inp %*% w2_norm
inp %*% w3_norm
norm_vec(w1) * (inp_norm %*% w1_norm)
norm_vec(w2) * (inp_norm %*% w2_norm)
norm_vec(w3) * (inp_norm %*% w3_norm)
w1_t2 <- (w1 + a*inp) / norm_vec(w1 + a*inp); w1_t2
w1_norm <- w1/norm_vec(w1); w1_norm
w2_norm <- w2/norm_vec(w2); w2_norm
w3_norm <- w3/norm_vec(w3); w3_norm
w4_norm <- w4/norm_vec(w4); w4_norm
inp_norm <- inp/norm_vec(inp); inp_norm
inp2_norm <- inp2/norm_vec(inp2); inp2_norm
inp %*% inp
inp_norm %*% inp_norm
w1_norm
w1_norm / norm_vec(w1_norm)
norm_vec(w1_norm)
inp %*% w1_norm
inp %*% w2_norm
inp %*% w3_norm
inp_norm %*% w1_norm
inp_norm %*% w2_norm
inp_norm %*% w3_norm
inp_norm %*% inp_norm
w4 <- c(.95,.05)
w4_norm <- w4/norm_vec(w4); w4_norm
inp_norm %*% w4_norm
w1*w2
w1
w1*t(w2)
w1*t(w1)
w1
install.packages('rstan')
install.packages('mcmc')
install.packages('RStanArm')
install.packages('rstanarm')
install.packages('shinystan')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
sqrt(.347)
sqrt(.091)
sqrt(-.01)
sqrt(.01)
.239^2
library(car)
d<-States
head(d)
scatter3d(d$SATM, d$pay, d$percent)
library(rgl)
install.packages(''rgl)
install.packages(''rgl'')
install.packages('rgl')
install.packages("rgl")
library(rgl)
install.packages('rgl')
library(rgl)
scatter3d(d$SATM, d$pay, d$percent)
library(car)
library(rgl)
d<-States
scatter3d(d$SATM, d$pay, d$percent)
slm <- lm(SATM ~ pay + percent, data=d)
summary(slm)
513+.97*(25)--1.37*30
lmPay <- lm(SATM ~ pay, data=d)
summary(lmPay)
lmPercent <- lm(SATM ~ percent, data=d)
summary(lmPercent)
cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
rt <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
lmPay <- lm(SATM ~ pay, data=d)
summary(lmPay)
pay.se <- 0.813
lmPercent <- lm(SATM ~ percent, data=d)
summary(lmPercent)
percent.se <- 0.11
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
part
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmPayPercent <- 0.11
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(pay.se / lmPayPercent)
pay_b <-part*(pay.se / lmPayPercent); pay_b
?pcor
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
lmSPercent.se <- 0.813
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmPayPercent.se <- 0.11
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
summary(slm)
summary(lmSPercent)
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
lmSPercent.se <- -1.232
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmPayPercent.se <- 0.02
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
summary(lmSPercent)
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
lmSPercent.se <- .11
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmPayPercent.se <- 0.02
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
lmSPercent.se <- .11
lmPayPercent <- lm(pay ~ percent, data=d)
summary(lmPayPercent)
lmPayPercent.se <- 0.02
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
summary(slm)
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
part
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent) / (1-cor(d$pay,d$percent)^2))
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent) / (1-cor(d$pay,d$percent)^2)); part
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent)) / (1-cor(d$pay,d$percent)^2)); part
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent)) / (1-cor(d$pay,d$percent)^2); part
install.packages('ppcor')
library(ppcor)
install.packages('MASS')
install.packages("MASS")
library(MASS)
library(MASS)
library(ppcor)
?pcor
pcor(data.frame(satm=d$SATM, pay=d$pay, per=d$percent))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent)) / (1-cor(d$pay,d$percent)^2); part
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
summary(slm)
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
lmSPercent <- lm(SATM ~ percent, data=d)
summary(lmSPercent)
lmSPercent.se <- .11
lmSPercent.se <- .1053
summary(lmPayPercent)
lmPayPercent.se <- 0.02358
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent)) / (1-cor(d$pay,d$percent)^2); part
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
summary(slm)
part<-(cor(d$SATM,d$pay) - cor(d$SATM,d$percent)*cor(d$pay,d$percent)) / (1-cor(d$pay,d$percent)^2); part
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
rt
part <- cor(d$pay,d$SATM) - cor(d$pay,d$percent)*cor(d$percent,d$SATM) /
sqrt((1-cor(d$pay,d$percent)^2)*(1-cor(d$SATM,d$percent)))
part
pay_b <-part*(lmSPercent.se / lmPayPercent.se); pay_b
t1 <- lm(SATM ~ percent, data=d)
t2 <- lm(pay~percent,data=d)
t1
t2
summary(t1)
resid(t1)
b <- lm(resid(t1) ~ resid(t2))
summary(b)
b <- lm(resid(t1) ~ resid(t2))
b
summary(slm)
setwd("C:/Users/admin/Desktop/VDModel_fg/testing")
norm_vec <- function(x) sqrt(sum(x^2))
a = .5
inp <- c(.35,.35)
inp2 <- c(.2,.8)
w1 <- c(.05,.05)
w2 <- c(.35,.35)
w3 <- c(.35,.65)
w4 <- c(.95,.05)
w1_norm <- w1/norm_vec(w1); w1_norm
w2_norm <- w2/norm_vec(w2); w2_norm
w3_norm <- w3/norm_vec(w3); w3_norm
w4_norm <- w4/norm_vec(w4); w4_norm
inp_norm <- inp/norm_vec(inp); inp_norm
inp2_norm <- inp2/norm_vec(inp2); inp2_norm
inp_norm %*% w1_norm
inp_norm %*% w2_norm
inp_norm %*% w3_norm
inp_norm %*% w4_norm
norm_vec(w1) * (inp_norm %*% w1_norm)
norm_vec(w2) * (inp_norm %*% w2_norm)
norm_vec(w3) * (inp_norm %*% w3_norm)
inp %*% w1_t2
inp %*% w2_t2
inp %*% w3_t2
w1_t2 <- (w1 + a*inp) / norm_vec(w1 + a*inp); w1_t2
w2_t2 <- (w2 + a*inp) / norm_vec(w2 + a*inp); w2_t2
w3_t2 <- (w3 + a*inp) / norm_vec(w3 + a*inp); w3_t2
inp_norm %*% w1_t2
inp_norm %*% w2_t2
inp_norm %*% w3_t2
a = .1
inp <- c(.35,.35)
inp2 <- c(.2,.8)
w1 <- c(.05,.05)
w2 <- c(.35,.35)
w3 <- c(.35,.65)
w4 <- c(.95,.05)
w1_norm <- w1/norm_vec(w1); w1_norm
w2_norm <- w2/norm_vec(w2); w2_norm
w3_norm <- w3/norm_vec(w3); w3_norm
w4_norm <- w4/norm_vec(w4); w4_norm
inp_norm <- inp/norm_vec(inp); inp_norm
inp2_norm <- inp2/norm_vec(inp2); inp2_norm
inp_norm %*% w1_norm
inp_norm %*% w2_norm
inp_norm %*% w3_norm
inp_norm %*% w4_norm
inp_norm %*% inp_norm
norm_vec(w1) * (inp_norm %*% w1_norm)
norm_vec(w2) * (inp_norm %*% w2_norm)
norm_vec(w3) * (inp_norm %*% w3_norm)
w1_t2 <- (w1 + a*inp) / norm_vec(w1 + a*inp); w1_t2
w2_t2 <- (w2 + a*inp) / norm_vec(w2 + a*inp); w2_t2
w3_t2 <- (w3 + a*inp) / norm_vec(w3 + a*inp); w3_t2
inp_norm %*% w1_t2
inp_norm %*% w2_t2
inp_norm %*% w3_t2
a1 <- inp_norm %*% w1_norm
a2 <- inp_norm %*% w2_norm
a3 <- inp_norm %*% w3_norm
a4 <- inp_norm %*% w4_norm
a <- c(a1,a2,a3,a4)
a
a %*% a
(a %*% a) / length(a)
a <- c(a3,a4)
a %*% a
(a %*% a) / length(a)
a <- c(a3,a4)
(a %*% a) / length(a)
((inp_norm %*% w1_norm)*(inp_norm %*% w1_norm)) / ((inp_norm %*% w1_norm))
(a3*a4)/(a4)
(a3*a4)/a4
(a3*a4)/a4
a.b <- (a3*a4)/a4
a.b <- (a3*a4)/a4; a.b
(a %*% a) / length(a)
a <- c(a3,a4)
a %*% a
a.b <- (a3*a4)/a4; a.b
a3.a4 <- (a3*a4)/a4; a3.a4
a3
a12 <- inp_norm2 %*% w1_norm
a32 <- inp2_norm %*% w3_norm
a42 <- inp2_norm %*% w4_norm
a32
a42
a11 <- inp_norm %*% w1_norm
a21 <- inp_norm %*% w2_norm
a31 <- inp_norm %*% w3_norm
a41 <- inp_norm %*% w4_norm
a1 <- c(a31,a41)
a1 %*% a1
(a1 %*% a1) / length(a1)
a31.a41 <- (a31*a41)/a41; a31.a41
a31
a32_p <- (a32)/(a32+a31)
a32_p <- (a31)/(a32+a31)
a32_p <- (a32)/(a32+a31)
a31_p <- (a31)/(a32+a31)
a32_p <- (a32)/(a32+a31); a32_p
a31_p <- (a31)/(a32+a31); a31_p
a42_p <- (a42)/(a42+a41); a42_p
a41_p <- (a41)/(a42+a41); a41_p
a32_p * a42_p
a2_p <- c(a32_p,a42_p)
a32.a42_p <- (a32_p*a42_p)/a42_p; a32.a42_p
a32_p
a1_p <- c(a31_p,a41_p)
a2_p <- c(a32_p,a42_p); a2_p
a1_p <- c(a31_p,a41_p); a1_p
sum(a2_p)
cor(a1_p,a2_p)
event1 <- c(a32,a42) / sum(c(a32,a42))
event1 <- c(a32,a42) / sum(c(a32,a42)); event1
sum(event1)
event1 <- c(a31,a41) / sum(c(a31,a41)); event1
ev1 <- event1 %*% event1
ev2 <- event2 %*% event2
ev1 <- event1 %*% event1
event2 <- c(a32,a42) / sum(c(a32,a42)); event2
event1 <- c(a31,a41) / sum(c(a31,a41)); event1
ev2 <- event2 %*% event2
ev1 <- event1 %*% event1; ev1
ev2 <- event2 %*% event2; ev2
event1*event1
event1*t(event1)
outer(event1,event1)
outer(event1,event1)
event1
event2
outer(event1,event2)
help sum
help sum?sum
?sum
sum(outer(event1,event2))
outer(event1,event2) %>% rowSums(.)
outer(event1,event2) %<% rowSums(.)
outer(event1,event2) %<% rowums(.)
outer(event1,event2) %>% rowums(.)
outer(event1,event1) %>% rowSums(.)
outer(event1,event1) %>% rowSums(.)
library(knitr)
library(formatR)
library(dplyr)
outer(event1,event1) %>% rowSums(.)
library(dplyr)
outer(event1,event1) %>% rowSums(.)
event1
outer(event1,event2) %>% rowSums(.)
outer(event1,event2) %>% colSums(.)
outer(event1,event2) %>% rowSums(.)
outer(event1,event2) %>% colSums(.)
outer(event1,event2)
g1 <- diag(100)
g1 <- diag(100);g1
install.packages('pracma')
library(pracma)
sigmoid(g1)
tanh(g1)
log(1+exp(g1))
out1<-log(1+exp(g1))
inp
d <- 100
i <- rand(d)
i
i <- rand(d,1)
i
i <- rand(1,d)
i
t(i)
g1 <- diag(50);g1
g1 <- diag(100);g1
